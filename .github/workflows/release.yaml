# Tag based release.
# Build and publish to github
# using the provided tag as the version.
#
# Only works on selected branches
#

name: release via tag

on:
  push:
    tags:
      - "v-*"
env:
  PackTarget: src/kwd.CoreUtil
  PackBranches: "master,Development,build"

jobs:
  check:
    name: 'check is valid branch'
    runs-on: ubuntu-latest
    outputs:
      valid_branch: ${{steps.check_branch.outputs.valid_branch}}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: check_branch
        id: check_branch
        shell: pwsh
        run: |
          $tagBranches = "$(git branch -r --contains ${{github.ref}})"
          $allowed = "${{env.PackBranches}}" -split ','
          
          foreach($item in $allowed){
            if($tagBranches.Contains($item)){
              $relVersion = "${{github.ref_name}}".Substring(2);    
              echo valid_branch=$relVersion >> $env:GITHUB_OUTPUT
              echo Allow building release - $relVersion
              return;
            }
          }
          echo valid_branch="" >> $env:GITHUB_OUTPUT
          echo Deny
        
  build:
    runs-on: ubuntu-latest
    name: "Build release package"
    needs: ["check"]
    if: ${{needs.check.valid_branch != ''}}
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.0.x
          7.0.x
    - name: Restore dependencies
      run: dotnet restore --locked-mode src/

    - name: Pack
      run: >
        dotnet pack 
        -c Release 
        --include-symbols
        $PackTarget
        -p:ContinuousIntegrationBuild=true 
        -p PackageVersion= ${{needs.check.valid_branch}}
        -o packages
    
    - name: Keep package artifact
      uses: actions/upload-artifact@v3
      with:
        name: package
        path: package/*.*pkg
        if-no-files-found: error

    - name: Publish to github packages
      shell: pwsh  
      run: echo "TODO"
      
    # todo create release with artifacts.
    - name: Create github release
      shell: pwsh
      run: echo "TODO"
